# === From the book ===

# Search for lines that start with 'From'
import re

hand = open('mbox-short.txt')
for line in hand:
    line = line.rstrip()
    if re.search('^From:', line):
        print(line)
        
# *********************************************************************************************************

# Search for lines that start with 'F', followed by
# 2 characters, followed by 'm:'
import re
hand = open('mbox-short.txt')
for line in hand:
    line = line.rstrip()
    if re.search('^F..m:', line):
        print(line)
        
# *********************************************************************************************************

# Search for lines that have an at sign between characters
# The characters must be a letter or number
import re
hand = open('mbox-short.txt')
for line in hand:
    line = line.rstrip()
    x = re.findall('[a-zA-Z0-9]\S*@\S*[a-zA-Z]', line)
    if len(x) > 0:
        print(x)

# *********************************************************************************************************

# === From teacher - Matching and Extracting ===

import re
x = 'My 2 favorite numbers are 19 and 42'
y = re.findall('[0-9]+', x)
print(y)

# [0-9]+ means one or more digits!

# *********************************************************************************************************
# === From teacher - Warning: Greedy Matching ===

import re
x = 'From: Using the: character'
y = re.findall('^F.+:', x)
print(y)

# = Non-greedy Matching =

import re
x = 'From: Using the: character'
y = re.findall('^F.+?:', x)
print(y)

# The "?" symbol marks the shorter version of the string

# *********************************************************************************************************

# === From teacher - Fine-tuning String Extraction ===

import re
x = 'From stephen.marquard@uct.ac.za Sat Jan  5 09:14:16 2008'
y = re.findall('^From (\S+@\S+)', x)
print(y)

# The parenthesis call what we want to extract! "From" is necessary to filter, but we don't want to extract.

# *********************************************************************************************************

# === From teacher - getting the basis of email ===

import re
lin = 'From stephen.marquard@uct.ac.za Sat Jan  5 09:14:16 2008'
y = re.findall('@([^ ]*)', lin)
print(y)

# The "[^ ]" means not blank! As many characters that are not blank, continue extrating 'till blank appears!

# = Even cooler regex! =

import re
lin = 'From stephen.marquard@uct.ac.za Sat Jan  5 09:14:16 2008'
y = re.findall('^From .*@([^ ]*)', lin)
print(y)

# This one much more precise, because it gets the "From" in the beginning!

# *********************************************************************************************************
# === From teacher: creating a list of floats ===

import re
hand = open('mbox-short.txt')
numlist = list()
for line in hand :
    line = line.rstrip()
    stuff = re.findall('^X-DSPAM-Confidence: ([0-9.]+)', line)
    if len(stuff) != 1 : continue
    num = float(stuff[0])
    numlist.append(num)
print('Maximum:', max(numlist))

# Note that the begining of the phrase is very precise!
# AInda não peguei a diferença entre "+" e "*".....

# *********************************************************************************************************
# === From teacher: Escape character ===


import re
x = 'We just received $10.00 for cookies.'
y = re.findall('\$[0-9.]+', x)
print(y)

# *********************************************************************************************************

# Exercise 1: Write a simple program to simulate the operation of the grep command on Unix. 
# Ask the user to enter a regular expression and count the number of lines that matched the regular expression:

import re

arquivo = open('mbox.txt')
exp_reg = input('Enter a regular expression: ')

contagem = 0
for linha in arquivo :
    linha.strip()
    achou = re.findall(exp_reg, linha)
    if len(achou) != 1 : continue
    contagem = contagem + 1

print('mbox.txt had {} lines that matched {}'.format(contagem, exp_reg))

# *********************************************************************************************************

# Exercise 2: Write a program to look for lines of the form:
# New Revision: 39772
# Extract the number from each of the lines using a regular expression and the findall() method. 
# Compute the average of the numbers and print out the average as an integer.

import re

ler = input('Enter file: ')
try:
    arquivo = open(ler)
except:
    arquivo = open('mbox.txt')

medias = list()
for linha in arquivo :
    linha.strip()
    achou = re.findall('New Revision: ([0-9]+)', linha)
    if len(achou) != 1 : continue
    achou = float(achou[0])
    medias.append(achou)

print(round(sum(medias)/len(medias)))


# *********************************************************************************************************
